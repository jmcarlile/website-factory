SEED BACKEND INFRASTRUCTURE


---------------------------------------------------------------------------------------------------
ENVIRONMENT & PACKAGES


create virtual environment:
cd "C:\Projects\Seed_Webserver"
python -m venv v3

enter virtual environment:
cd "C:\Projects\Seed_Webserver"
v3\Scripts\activate

clone repo:
cd "C:\Projects\Seed_Webserver"
git clone https://github.com/Amplio-ai/Seed_Webserver.git codebase


freeze packages when necessary:
pip freeze -q > "C:\Projects\Seed_Webserver\codebase\backend\app_proj\common\requirements.txt"
python          "C:\Projects\Seed_Webserver\codebase\backend\app_proj\common\clean_reqs.py"

install packages from requirements file:
pip install -r requirements.txt

check a package:
pip show <package>
which <package>

operating systems:
- windows: pip and pip3 are the same
- linux: pip defaults to python2


---------------------------------------------------------------------------------------------------
PACKAGES INSTALLED


pip install django==3.1.2
- install django, keep the version that matches channels
- packages: pytz, sqlparse, asgiref, django

pip install djangorestframework django-cors-headers
- install django rest framework
- allows for cross origin requests from the frontend for API calls
- packages: djangorestframework, django-cors-headers

pip install channels channels_redis==2.4.2 daphne
- install channels for websockets support
- version 2 setup is entirely different from 1
- packages: asgiref, txaio, pycparser, cffi, cryptography, autobahn, zope.interface, constantly, incremental, Automat, hyperlink, PyHamcrest, pyopenssl, pyasn1, pyasn1-modules, service-identity, twisted, daphne, channels; redis, msgpack-python, asgi-redis

install twisted on windows:
- regular pip install doesn't work, but its required for channels
- download file: https://www.lfd.uci.edu/~gohlke/pythonlibs/#twisted
- install with pip
cd C:\Projects\Seed_Webserver\documents
pip install Twisted-20.3.0-cp38-cp38-win_amd64.whl

install redis server on windows:
https://github.com/microsoftarchive/redis/releases
- it is always running as a service

pip install psycopg2
- python interface for postgresql database
- also requires changes to settings.py

pip install jupyter django-extensions
- allows to import django into jupyter 
- must add entry in settings.py and run django.setup in notebook
- django extensions has to be added to settings
- these packages are excluded from production with clean_reqs.py
- packages: decorator, traitlets, tornado, pyzmq, wcwidth, prompt-toolkit, parso, jedi, backcall, pygments, 
	colorama, pickleshare, qtpy, qtconsole, prometheus-client, MarkupSafe, jinja2, webencodings, bleach, pandocfilters, 
	attrs, pyrsistent, jsonschema, nbformat, defusedxml, entrypoints, mistune, testpath, nbconvert, Send2Trash, 
	terminado, widgetsnbextension, 
	jupyter-core, ipython-genutils, jupyter-client, ipython, ipykernel, notebook, jupyter-console, jupyter, ipywidgets, 
	pywin32, pywinpty, django-extensions

pip install pandas plotly
- for organizing and visualizing data


#pip install google-cloud-storage
- upload file as string 
- no need to create file in OS
- packages: 

#pip install google-api-python-client google-auth-httplib2 google-auth-oauthlib
- access data from google spreadsheet


---------------------------------------------------------------------------------------------------
SETUP DJANGO 


CREATE PROJECT FILES

python --version

create the base project:
- rename the parent folder to backend
cd "C:\Projects\Seed_Webserver\codebase"
django-admin startproject app_proj

initialize the database:
- starts the default sqlite db as a project file
- creating a superuser is not necessary
cd "C:\Projects\ResearchWebserver\CodeBase\backend"
python manage.py migrate

setup the basics:
python manage.py startapp business_data
- configure settings.py, add new django module
- configure urls.py 

run the server to test:
python manage.py runserver
- django should serve to http://127.0.0.1:8000/
- ctrl+C to stop the server


INTEGRATE WITH FRONTEND

add options to settings.py
- react app dir: the static folder that contains the build.js

create base template index.html url:
- in urls.py, add the empty url for the based react template

move static files to prod static location
- this is done after the frontend has been built
- this is client side rendering because the react scripts are loaded on the client
python manage.py collectstatic

http://127.0.0.1:8000/static/amplio_logo.png

http://127.0.0.1:8000/static/css/main.5f361e03.chunk.css


INTEGRATE WITH JUPYTER

cd "C:\Projects\Seed_Webserver\CodeBase\backend"
python manage.py shell_plus --notebook
- doesn't work for vscode

add a kernel for each venv:
- not necessary with django shell
cd "C:\Projects\Seed_Webserver"
ipython kernel install --user --name=v1


---------------------------------------------------------------------------------------------------
DATABASE MANAGEMENT


PGADMIN TOOL

check tables:
database -> schema -> public -> tables

database superuser:
postgres
123rty


CREATE DATABASE 

create a database with cloud SQL
- must create an instance, then a database within it
- each connection must be explicitly added to list of allowed connections
	- can authorize with each user's IP


RESET MIGRATIONS

1] delete all /migrations/ files, except __init__.py 

cd "C:\Projects\Seed_Webserver\codebase\backend"
rm -rfv ./*/migrations/!(__init__.py)
find -type d -name __pycache__ -exec rm -rf {} \;

2] recreate database 
	- drop the database if necessary

3] run migrations
python manage.py makemigrations
python manage.py migrate

4] create superusers
- django user: admin
- password: admin


CREATE SUPERUSER

- must be in the virtual env, or dependencies for manage.py will not be available
- user is created in current database (set in settings.py)
python manage.py createsuperuser


---------------------------------------------------------------------------------------------------

